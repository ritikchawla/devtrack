# docker-compose.yml
services:
  postgres:
    image: postgres:14-alpine
    container_name: devtrack_postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - devtrack_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    container_name: devtrack_api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${API_PORT}:${API_PORT}" # Use variable for API port
    depends_on:
      postgres:
        condition: service_healthy # Wait for postgres healthcheck
    env_file:
      - .env
    environment:
      DB_SOURCE: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_HOST}:${DB_PORT}/${POSTGRES_DB}?sslmode=disable"
      API_PORT: ${API_PORT}
      # Add other environment variables like JWT secrets later
    networks:
      - devtrack_network

volumes:
  postgres_data:

networks:
  devtrack_network:
    driver: bridge